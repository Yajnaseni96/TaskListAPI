[{"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\index.tsx":"1","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\store.ts":"2","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\App.tsx":"3","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\reducers\\listReducer.ts":"4","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\Header.tsx":"5","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\types.ts":"6","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\index.tsx":"7","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\store.ts":"8","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\App.tsx":"9","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\reducers\\notificationReducer.ts":"10","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\reducers\\listReducer.ts":"11","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\Header.tsx":"12","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\types.ts":"13","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\SideBar.tsx":"14","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\CreateNewList.tsx":"15","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\listAction.ts":"16","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\index.ts":"17","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\notificationAction.ts":"18","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\Notification.tsx":"19","C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\List.tsx":"20","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\reducers\\notificationReducer.ts":"21","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\Notification.tsx":"22","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\SideBar.tsx":"23","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\CreateNewList.tsx":"24","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\List.tsx":"25","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\index.ts":"26","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\listAction.ts":"27","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\notificationAction.ts":"28","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\DeleteListModal.tsx":"29","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\EditListModal.tsx":"30"},{"size":509,"mtime":1609154385069,"results":"31","hashOfConfig":"32"},{"size":484,"mtime":1609309973253,"results":"33","hashOfConfig":"32"},{"size":1175,"mtime":1609750830210,"results":"34","hashOfConfig":"32"},{"size":2699,"mtime":1609152918178,"results":"35","hashOfConfig":"32"},{"size":573,"mtime":1609311320752,"results":"36","hashOfConfig":"32"},{"size":3694,"mtime":1609133353969,"results":"37","hashOfConfig":"32"},{"size":509,"mtime":1609154385069,"results":"38","hashOfConfig":"39"},{"size":484,"mtime":1609309973253,"results":"40","hashOfConfig":"39"},{"size":754,"mtime":1609673381510,"results":"41","hashOfConfig":"39"},{"size":488,"mtime":1609310587294,"results":"42","hashOfConfig":"39"},{"size":2699,"mtime":1609152918178,"results":"43","hashOfConfig":"39"},{"size":573,"mtime":1609311320752,"results":"44","hashOfConfig":"39"},{"size":3694,"mtime":1609133353969,"results":"45","hashOfConfig":"39"},{"size":294,"mtime":1609685104089,"results":"46","hashOfConfig":"39"},{"size":2221,"mtime":1609673046250,"results":"47","hashOfConfig":"39"},{"size":2680,"mtime":1609140553115,"results":"48","hashOfConfig":"39"},{"size":68,"mtime":1609656708373,"results":"49","hashOfConfig":"39"},{"size":263,"mtime":1609147498360,"results":"50","hashOfConfig":"39"},{"size":1180,"mtime":1609672912810,"results":"51","hashOfConfig":"39"},{"size":1424,"mtime":1609685425686,"results":"52","hashOfConfig":"39"},{"size":488,"mtime":1609310587294,"results":"53","hashOfConfig":"32"},{"size":1180,"mtime":1609672912810,"results":"54","hashOfConfig":"32"},{"size":294,"mtime":1609685104089,"results":"55","hashOfConfig":"32"},{"size":2221,"mtime":1609673046250,"results":"56","hashOfConfig":"32"},{"size":1756,"mtime":1609736305249,"results":"57","hashOfConfig":"32"},{"size":68,"mtime":1609656708373,"results":"58","hashOfConfig":"32"},{"size":2680,"mtime":1609140553115,"results":"59","hashOfConfig":"32"},{"size":263,"mtime":1609147498360,"results":"60","hashOfConfig":"32"},{"size":2435,"mtime":1609743439775,"results":"61","hashOfConfig":"32"},{"size":2691,"mtime":1609750662593,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"1gz9z33",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l3pc6x",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\index.tsx",["130"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ReactReduxContext } from 'react-redux';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store/store';\r\nimport  '../node_modules/bulma/css/bulma.min.css';\r\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n",["131","132"],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\store.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\App.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\reducers\\listReducer.ts",["133"],"import {ListState, ListsAction, Lists, ADD_LIST, GET_LISTS, GET_LIST_BY_ID, SET_LISTID_TO_DELETE, SET_LIST_TO_EDIT, DELETE_LIST, UPDATE_LIST} from '../types';\r\n\r\nconst initialState: ListState = {\r\n    lists: {},\r\n    listIdToDelete: '',\r\n    listToEdit: null,\r\n    listById: null,\r\n    selectedList: null,\r\n    taskToDelete: null,\r\n    taskToEdit: null\r\n}\r\n\r\n//Helper function\r\nconst getListsFromLS =(): Lists =>{\r\n    if(localStorage.getItem('task_list')){\r\n        return JSON.parse(localStorage.getItem('task_list') || '{}');\r\n}\r\nreturn {};\r\n}\r\n\r\nconst saveListsToLS =(lists: Lists) =>{\r\n    localStorage.setItem('task_list', JSON.stringify(lists));\r\n}\r\n\r\n\r\nexport default (state= initialState, action: ListsAction): ListState => {\r\n    const listsFromLS = getListsFromLS();\r\n    switch(action.type) {\r\n        case ADD_LIST:\r\n            const clonedListsFromLS ={...listsFromLS};\r\n            clonedListsFromLS[action.payload.id] = action.payload;\r\n            saveListsToLS(clonedListsFromLS);\r\n            return{\r\n                ...state,\r\n                lists: clonedListsFromLS\r\n            }\r\n        case GET_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: listsFromLS\r\n            }\r\n        case GET_LIST_BY_ID:\r\n            const list = listsFromLS[action.payload]\r\n            return {\r\n                ...state,\r\n                listById: list\r\n            }\r\n        case SET_LISTID_TO_DELETE:\r\n            return {\r\n                ...state,\r\n                listIdToDelete: action.payload\r\n            }\r\n        case SET_LIST_TO_EDIT:\r\n            const listToEdit = listsFromLS[action.payload];\r\n            return {\r\n                ...state,\r\n                listToEdit\r\n            }\r\n        case DELETE_LIST:\r\n            const clonedListsFromLS2 = {...listsFromLS};\r\n            const listId = clonedListsFromLS2[action.payload].id;\r\n            delete clonedListsFromLS2[action.payload];\r\n            saveListsToLS(clonedListsFromLS2);\r\n            return {\r\n                ...state,\r\n                lists: clonedListsFromLS2,\r\n                listIdToDelete: '',\r\n                listById: null,\r\n                selectedList: state.selectedList && listId === state.selectedList.id ? null : state.selectedList\r\n            }\r\n        case UPDATE_LIST:\r\n            const clonedListsFromLS3 = {...listsFromLS};\r\n            clonedListsFromLS3[action.payload.id].name = action.payload.name;\r\n            saveListsToLS(clonedListsFromLS3);\r\n            return {\r\n                ...state,\r\n                lists: clonedListsFromLS3,\r\n                listToEdit: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\Header.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\types.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\index.tsx",["134"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\store.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\App.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\reducers\\notificationReducer.ts",["135"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\reducers\\listReducer.ts",["136"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\Header.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\types.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\SideBar.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\CreateNewList.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\listAction.ts",["137"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\index.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\store\\actions\\notificationAction.ts",["138"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\Notification.tsx",["139"],"C:\\Users\\LENOVO\\Documents\\Demo\\tasklistapi\\src\\components\\List.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\reducers\\notificationReducer.ts",["140"],"import {NotificationState, NotificationAction, SET_NOTIFICATION} from '../types';\r\n\r\nconst initialState: NotificationState = {\r\n    message: '',\r\n    type: 'success'\r\n}\r\n\r\nexport default (state = initialState, action: NotificationAction): NotificationState =>{\r\n    switch(action.type) {\r\n        case SET_NOTIFICATION : \r\n        return {\r\n            message: action.payload.msg,\r\n            type: action.payload.type\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\Notification.tsx",["141"],"import React, {FC, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {setNotification} from '../store/actions';\r\nimport {RootState} from '../store/store';\r\n\r\ninterface NotificationProps {\r\n    msg: string;\r\n}\r\n\r\nlet timeout : ReturnType< typeof setTimeout>;\r\nconst Notification : FC<NotificationProps> = ({msg}) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const type = useSelector((state: RootState) => state.notification.type);\r\n\r\n    useEffect(()=>{\r\n        if(msg !== ''){\r\n            if(timeout){\r\n                clearTimeout(timeout);\r\n            }\r\n\r\n            timeout = setTimeout(() =>{\r\n                dispatch(setNotification(''));\r\n            }, 3000);\r\n        }\r\n    }, [dispatch, msg]);\r\n\r\n    const closeNotification =()=>{\r\n        dispatch(setNotification(''));\r\n        clearTimeout(timeout);\r\n    }\r\n    return(\r\n        <div className={msg? `${type=='danger'} ? 'notification is-danger': 'notification is primary'}`: 'notification is-hidden'}>\r\n            <button className=\"delete\" onClick={closeNotification}></button>\r\n            <p>{msg}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\SideBar.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\CreateNewList.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\List.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\index.ts",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\listAction.ts",["142"],"import {List, ListsAction, ADD_LIST, GET_LISTS, GET_LIST_BY_ID, SET_LISTID_TO_DELETE, SET_LIST_TO_EDIT, SET_SELECTED_LIST, DELETE_LIST, UPDATE_LIST, Task, Lists, ADD_TASK, SET_TASK_TO_DELETE, UNSET_TASK_TO_DELETE, DELETE_TASK, UNSET_TASK_TO_EDIT, UPDATE_TASK} from '../types';\r\n\r\nexport const addList = (list: List): ListsAction =>{\r\n    return{\r\n        type: ADD_LIST,\r\n        payload: list\r\n    }\r\n}\r\n\r\nexport const getLists =(): ListsAction =>{\r\n    return {\r\n        type: GET_LISTS\r\n    }\r\n}\r\n\r\nexport const getListById = (id: string): ListsAction =>{\r\n    return {\r\n        type: GET_LIST_BY_ID,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setListIdToDelete = (id: string): ListsAction =>{\r\n    return {\r\n        type: SET_LISTID_TO_DELETE,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setListToEdit = (id: string): ListsAction =>{\r\n    return {\r\n        type: SET_LIST_TO_EDIT,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setSelectedList =(id: string) : ListsAction =>{\r\n    return {\r\n        type: SET_SELECTED_LIST,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const deleteList =(id:string) : ListsAction =>{\r\n    return {\r\n        type: DELETE_LIST,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const updateList =(id:string, name: string): ListsAction =>{\r\n    return {\r\n        type: UPDATE_LIST,\r\n        payload: {\r\n            id,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTask = (task: Task, list: List): ListsAction =>{\r\n    return {\r\n        type: ADD_TASK,\r\n        payload: {\r\n            task,\r\n            list\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTaskToDelete = (task: Task, list: List) : ListsAction =>{\r\n    return {\r\n        type: SET_TASK_TO_DELETE,\r\n        payload: {\r\n            task,\r\n            list\r\n        }\r\n    }\r\n}\r\n\r\nexport const unsetTaskToDelete = (): ListsAction =>{\r\n    return{\r\n        type: UNSET_TASK_TO_DELETE\r\n    }\r\n}\r\n\r\nexport const deleteTask = (task: Task, list: List): ListsAction =>{\r\n    return {\r\n        type: DELETE_TASK,\r\n        payload: {\r\n            task,\r\n            list\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTaskToEdit = (task: Task, list: List): ListsAction =>{\r\n    return {\r\n        type : SET_TASK_TO_DELETE,\r\n        payload: {\r\n            task,\r\n            list\r\n        }\r\n    }\r\n}\r\n\r\nexport const unsetTaskToEdit = (): ListsAction =>{\r\n    return {\r\n        type: UNSET_TASK_TO_EDIT\r\n    }\r\n}\r\n\r\nexport const updateTask = (taskId: string, taskName: string, taskState: boolean, list: List): ListsAction =>{\r\n    return {\r\n        type: UPDATE_TASK,\r\n        payload: {\r\n            taskId,\r\n            taskName,\r\n            taskState,\r\n            list\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\store\\actions\\notificationAction.ts",["143"],"import {SET_NOTIFICATION, NotificationAction} from '../types'\r\n\r\nexport const setNotification = (msg: string, type: string = 'success') =>{\r\n    return {\r\n        type: SET_NOTIFICATION,\r\n        payload: {\r\n            msg,\r\n            type\r\n        }\r\n    }\r\n}","C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\DeleteListModal.tsx",[],"C:\\Users\\LENOVO\\Documents\\Demo\\TaskListAPI\\src\\components\\EditListModal.tsx",[],{"ruleId":"144","severity":1,"message":"145","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":27},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":26,"column":1,"nodeType":"154","endLine":83,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":8,"column":1,"nodeType":"154","endLine":19,"endColumn":2},{"ruleId":"152","severity":1,"message":"153","line":26,"column":1,"nodeType":"154","endLine":83,"endColumn":2},{"ruleId":"144","severity":1,"message":"155","line":1,"column":156,"nodeType":"146","messageId":"147","endLine":1,"endColumn":161},{"ruleId":"144","severity":1,"message":"156","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":34,"column":37,"nodeType":"159","messageId":"160","endLine":34,"endColumn":39},{"ruleId":"152","severity":1,"message":"153","line":8,"column":1,"nodeType":"154","endLine":19,"endColumn":2},{"ruleId":"157","severity":1,"message":"158","line":34,"column":37,"nodeType":"159","messageId":"160","endLine":34,"endColumn":39},{"ruleId":"144","severity":1,"message":"155","line":1,"column":156,"nodeType":"146","messageId":"147","endLine":1,"endColumn":161},{"ruleId":"144","severity":1,"message":"156","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":45},"@typescript-eslint/no-unused-vars","'ReactReduxContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Lists' is defined but never used.","'NotificationAction' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]